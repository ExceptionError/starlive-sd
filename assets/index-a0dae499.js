var H=Object.defineProperty;var q=(C,e,t)=>e in C?H(C,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):C[e]=t;var F=(C,e,t)=>(q(C,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerpolicy&&(s.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?s.credentials="include":o.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const W=C=>new Proxy(C,G),G={get(C,e,t){return e==="downloadText"?(r,o,s)=>{const n=i=>{o(i.replace(".pvr",".png"))};Reflect.apply(C.downloadText,C,[r,n,s])}:Reflect.get(C,e,t)}};class K{constructor(e){F(this,"index");F(this,"buffer");this.index=0,this.buffer=new DataView(e.buffer)}readByte(){return this.buffer.getInt8(this.index++)}readUnsignedByte(){return this.buffer.getUint8(this.index++)}readShort(){const e=this.buffer.getInt16(this.index);return this.index+=2,e}readInt32(){const e=this.buffer.getInt32(this.index);return this.index+=4,e}readFloat(){const e=this.buffer.getFloat32(this.index);return this.index+=4,e}readBoolean(){return this.readByte()!=0}readInt(e){let t=this.readByte(),r=t&127;return t&128&&(t=this.readByte(),r|=(t&127)<<7,t&128&&(t=this.readByte(),r|=(t&127)<<14,t&128&&(t=this.readByte(),r|=(t&127)<<21,t&128&&(t=this.readByte(),r|=(t&127)<<28)))),e?r:r>>>1^-(r&1)}readString(){let e=this.readInt(!0);switch(e){case 0:return null;case 1:return""}e--;let t="";for(let r=0;r<e;){const o=this.readUnsignedByte();switch(o>>4){case 12:case 13:t+=String.fromCharCode((o&31)<<6|this.readByte()&63),r+=2;break;case 14:t+=String.fromCharCode((o&15)<<12|(this.readByte()&63)<<6|this.readByte()&63),r+=3;break;default:t+=String.fromCharCode(o),r++}}return t}}class j{constructor(e){F(this,"scale",1);F(this,"linkedMeshes",[]);this.attachmentLoader=e}readSkeletonData(e){const t=this.scale,r=new K(e),o=new spine.SkeletonData;o.name="";const s=this.assignMeta(r,o),n=this.readBones(r,t,s),i=this.readSlots(r,n);return o.bones=n,o.slots=i,o.ikConstraints=this.readIkConstraints(r,n),o.transformConstraints=this.readTransformConstraints(r,t),o.pathConstraints=this.readPathConstraints(r,n,i,t),this.assignSkins(r,o,t,s),this.linkedMeshes=this.assignLinkedMeshes(o,this.linkedMeshes),o.events=this.readEvents(r),o.animations=this.readAnimations(r,o,t),o}assignMeta(e,t){t.hash=e.readString(),t.version=e.readString(),t.width=e.readFloat(),t.height=e.readFloat();const r=e.readBoolean();return r&&(t.fps=e.readFloat(),t.imagesPath=e.readString()),r}readBones(e,t,r){const o=[];for(let s=0,n=e.readInt(!0);s<n;s++){const i=e.readString();if(!i)throw new Error("Bone name must not be null.");const m=s==0?null:o[e.readInt(!0)],a=new spine.BoneData(s,i,m);a.rotation=e.readFloat(),a.x=e.readFloat()*t,a.y=e.readFloat()*t,a.scaleX=e.readFloat(),a.scaleY=e.readFloat(),a.shearX=e.readFloat(),a.shearY=e.readFloat(),a.length=e.readFloat()*t,a.transformMode=e.readInt(!0),r&&spine.Color.rgba8888ToColor(a.color,e.readInt32()),o.push(a)}return o}readSlots(e,t){const r=[];for(let o=0,s=e.readInt(!0);o<s;o++){const n=e.readString();if(!n)throw new Error("Slot name must not be null.");const i=t[e.readInt(!0)],m=new spine.SlotData(o,n,i);spine.Color.rgba8888ToColor(m.color,e.readInt32());const a=e.readInt32();a!=-1&&(m.darkColor=new spine.Color,spine.Color.rgb888ToColor(m.darkColor,a)),m.attachmentName=e.readString(),m.blendMode=e.readInt(!0),r.push(m)}return r}readIkConstraints(e,t){const r=[];for(let o=0,s=e.readInt(!0);o<s;o++){const n=e.readString();if(!n)throw new Error("IK constraint data name must not be null.");const i=new spine.IkConstraintData(n);i.order=e.readInt(!0);for(let m=0,a=e.readInt(!0);m<a;m++)i.bones.push(t[e.readInt(!0)]);i.target=t[e.readInt(!0)],i.mix=e.readFloat(),i.bendDirection=e.readByte(),r.push(i)}return r}readTransformConstraints(e,t){const r=[];for(let o=0,s=e.readInt(!0);o<s;o++){const n=e.readString();if(!n)throw new Error("Transform constraint data name must not be null.");const i=new spine.TransformConstraintData(n);i.order=e.readInt(!0);for(let m=0,a=e.readInt(!0);m<a;m++)i.bones.push(i.bones[e.readInt(!0)]);i.target=i.bones[e.readInt(!0)],i.local=e.readBoolean(),i.relative=e.readBoolean(),i.offsetRotation=e.readFloat(),i.offsetX=e.readFloat()*t,i.offsetY=e.readFloat()*t,i.offsetScaleX=e.readFloat(),i.offsetScaleY=e.readFloat(),i.offsetShearY=e.readFloat(),i.rotateMix=e.readFloat(),i.translateMix=e.readFloat(),i.scaleMix=e.readFloat(),i.shearMix=e.readFloat(),r.push(i)}return r}readPathConstraints(e,t,r,o){const s=[];for(let n=0,i=e.readInt(!0);n<i;n++){const m=e.readString();if(!m)throw new Error("Path constraint data name must not be null.");const a=new spine.PathConstraintData(m);a.order=e.readInt(!0);for(let c=0,h=e.readInt(!0);c<h;c++)a.bones.push(t[e.readInt(!0)]);a.target=r[e.readInt(!0)],a.positionMode=e.readInt(!0),a.spacingMode=e.readInt(!0),a.rotateMode=e.readInt(!0),a.offsetRotation=e.readFloat(),a.position=e.readFloat(),a.positionMode==spine.PositionMode.Fixed&&(a.position*=o),a.spacing=e.readFloat();const u=a.spacingMode;(u==spine.SpacingMode.Length||u==spine.SpacingMode.Fixed)&&(a.spacing*=o),a.rotateMix=e.readFloat(),a.translateMix=e.readFloat(),s.push(a)}return s}assignSkins(e,t,r,o){const s=[],n=this.readSkin(e,t,!0,r,o);n&&(t.defaultSkin=n,s.push(n));for(let i=0,m=e.readInt(!0);i<m;i++){const a=this.readSkin(e,t,!1,r,o);if(!a)throw new Error("readSkin() should not have returned null.");s.push(a)}t.skins=s}readSkin(e,t,r,o,s){let n,i=0;if(r){if(i=e.readInt(!0),i==0)return null;n=new spine.Skin("default")}else{const m=e.readString();if(!m)throw new Error("Skin name must not be null.");n=new spine.Skin(m),n.bones.length=e.readInt(!0);for(let a=0,u=n.bones.length;a<u;a++)n.bones[a]=t.bones[e.readInt(!0)];for(let a=0,u=e.readInt(!0);a<u;a++)n.constraints.push(t.ikConstraints[e.readInt(!0)]);for(let a=0,u=e.readInt(!0);a<u;a++)n.constraints.push(t.transformConstraints[e.readInt(!0)]);for(let a=0,u=e.readInt(!0);a<u;a++)n.constraints.push(t.pathConstraints[e.readInt(!0)]);i=e.readInt(!0)}for(let m=0;m<i;m++){const a=e.readInt(!0);for(let u=0,c=e.readInt(!0);u<c;u++){const h=e.readString();if(!h)throw new Error("Attachment name must not be null");const f=this.readAttachment(e,t,n,a,h,o,s);f&&n.setAttachment(a,h,f)}}return n}readAttachment(e,t,r,o,s,n,i){let m=e.readString();switch(m||(m=s),e.readByte()){case spine.AttachmentType.Region:{let a=e.readString();const u=e.readFloat(),c=e.readFloat(),h=e.readFloat(),f=e.readFloat(),b=e.readFloat(),w=e.readFloat(),g=e.readFloat(),I=e.readInt32();a||(a=m);const d=this.attachmentLoader.newRegionAttachment(r,m,a);return d?(d.path=a,d.x=c*n,d.y=h*n,d.scaleX=f,d.scaleY=b,d.rotation=u,d.width=w*n,d.height=g*n,spine.Color.rgba8888ToColor(d.color,I),d.updateOffset(),d):null}case spine.AttachmentType.BoundingBox:{const a=e.readInt(!0),u=this.readVertices(e,n,a),c=i?e.readInt32():0,h=this.attachmentLoader.newBoundingBoxAttachment(r,m);return h?(h.worldVerticesLength=a<<1,h.vertices=u.vertices,h.bones=u.bones,i&&spine.Color.rgba8888ToColor(h.color,c),h):null}case spine.AttachmentType.Mesh:{let a=e.readString();const u=e.readInt32(),c=e.readInt(!0),h=this.readFloatArray(e,c<<1,1),f=this.readShortArray(e),b=this.readVertices(e,n,c),w=e.readInt(!0);let g=[],I=0,d=0;i&&(g=this.readShortArray(e),I=e.readFloat(),d=e.readFloat()),a||(a=m);const l=this.attachmentLoader.newMeshAttachment(r,m,a);return l?(l.path=a,spine.Color.rgba8888ToColor(l.color,u),l.bones=b.bones,l.vertices=b.vertices,l.worldVerticesLength=c<<1,l.triangles=f,l.regionUVs=h,l.updateUVs(),l.hullLength=w<<1,i&&(l.edges=g,l.width=I*n,l.height=d*n),l):null}case spine.AttachmentType.LinkedMesh:{let a=e.readString();const u=e.readInt32(),c=e.readString(),h=e.readString(),f=e.readBoolean();let b=0,w=0;i&&(b=e.readFloat(),w=e.readFloat()),a||(a=m);const g=this.attachmentLoader.newMeshAttachment(r,m,a);return g?(g.path=a,spine.Color.rgba8888ToColor(g.color,u),i&&(g.width=b*n,g.height=w*n),this.linkedMeshes.push({mesh:g,skin:c,slotIndex:o,parent:h,inheritTimeline:f}),g):null}case spine.AttachmentType.Path:{const a=e.readBoolean(),u=e.readBoolean(),c=e.readInt(!0),h=this.readVertices(e,n,c),f=spine.Utils.newArray(c/3,0);for(let g=0,I=f.length;g<I;g++)f[g]=e.readFloat()*n;const b=i?e.readInt32():0,w=this.attachmentLoader.newPathAttachment(r,m);return w?(w.closed=a,w.constantSpeed=u,w.worldVerticesLength=c<<1,w.vertices=h.vertices,w.bones=h.bones,w.lengths=f,i&&spine.Color.rgba8888ToColor(w.color,b),w):null}case spine.AttachmentType.Point:{const a=e.readFloat(),u=e.readFloat(),c=e.readFloat(),h=i?e.readInt32():0,f=this.attachmentLoader.newPointAttachment(r,m);return f?(f.x=u*n,f.y=c*n,f.rotation=a,i&&spine.Color.rgba8888ToColor(f.color,h),f):null}case spine.AttachmentType.Clipping:{const a=e.readInt(!0),u=e.readInt(!0),c=this.readVertices(e,n,u),h=i?e.readInt32():0,f=this.attachmentLoader.newClippingAttachment(r,m);return f?(f.endSlot=t.slots[a],f.worldVerticesLength=u<<1,f.vertices=c.vertices,f.bones=c.bones,i&&spine.Color.rgba8888ToColor(f.color,h),f):null}}return null}readVertices(e,t,r){const o=r<<1;if(!e.readBoolean())return{vertices:this.readFloatArray(e,o,t),bones:null};const s=[],n=[];for(let a=0;a<r;a++){const u=e.readInt(!0);n.push(u);for(let c=0;c<u;c++)n.push(e.readInt(!0)),s.push(e.readFloat()*t),s.push(e.readFloat()*t),s.push(e.readFloat())}return{vertices:spine.Utils.toFloatArray(s),bones:n}}readFloatArray(e,t,r){const o=[];for(let s=0;s<t;s++)o.push(e.readFloat()*r);return o}readShortArray(e){const t=e.readInt(!0),r=[];for(let o=0;o<t;o++)r.push(e.readShort());return r}assignLinkedMeshes(e,t){for(let r=0,o=t.length;r<o;r++){const s=t[r],n=s.skin?e.findSkin(s.skin):e.defaultSkin;if(!n)throw new Error("Not skin found for linked mesh.");if(!s.parent)throw new Error("Linked mesh parent must not be null");const i=n.getAttachment(s.slotIndex,s.parent);if(!i)throw new Error(`Parent mesh not found: ${s.parent}`);s.mesh.setParentMesh(i),s.mesh.updateUVs()}return[]}readEvents(e){const t=[];for(let r=0,o=e.readInt(!0);r<o;r++){const s=e.readString();if(!s)throw new Error("No EventName");const n=new spine.EventData(s);n.intValue=e.readInt(!1),n.floatValue=e.readFloat(),n.stringValue=e.readString(),t.push(n)}return t}readAnimations(e,t,r){const o=[];for(let s=0,n=e.readInt(!0);s<n;s++)o.push(this.readAnimation(e,t,r));return o}readAnimation(e,t,r){const o=e.readString();if(!o)throw new Error("Animatio name must not be null.");const s=[];let n=0;const i=new spine.Color,m=new spine.Color;for(let c=0,h=e.readInt(!0);c<h;c++){const f=e.readInt(!0);for(let b=0,w=e.readInt(!0);b<w;b++){const g=e.readByte(),I=e.readInt(!0);switch(g){case Q:{const d=new spine.AttachmentTimeline(I);d.slotIndex=f;for(let l=0;l<I;l++)d.setFrame(l,e.readFloat(),e.readString());s.push(d),n=Math.max(n,d.frames[I-1]);break}case ee:{const d=new spine.ColorTimeline(I);d.slotIndex=f;for(let l=0;l<I;l++){const S=e.readFloat();spine.Color.rgba8888ToColor(i,e.readInt32()),d.setFrame(l,S,i.r,i.g,i.b,i.a),l<I-1&&this.readCurve(e,l,d)}s.push(d),n=Math.max(n,d.frames[(I-1)*spine.ColorTimeline.ENTRIES]);break}case te:{const d=new spine.TwoColorTimeline(I);d.slotIndex=f;for(let l=0;l<I;l++){const S=e.readFloat();spine.Color.rgba8888ToColor(i,e.readInt32()),spine.Color.rgb888ToColor(m,e.readInt32()),d.setFrame(l,S,i.r,i.g,i.b,i.a,m.r,m.g,m.b),l<I-1&&this.readCurve(e,l,d)}s.push(d),n=Math.max(n,d.frames[(I-1)*spine.TwoColorTimeline.ENTRIES]);break}default:throw new Error("unknown timeline type"+g)}}}for(let c=0,h=e.readInt(!0);c<h;c++){const f=e.readInt(!0);for(let b=0,w=e.readInt(!0);b<w;b++){const g=e.readByte(),I=e.readInt(!0);switch(g){case Z:{const d=new spine.RotateTimeline(I);d.boneIndex=f;for(let l=0;l<I;l++)d.setFrame(l,e.readFloat(),e.readFloat()),l<I-1&&this.readCurve(e,l,d);s.push(d),n=Math.max(n,d.frames[(I-1)*spine.RotateTimeline.ENTRIES]);break}case J:case N:case V:{let d,l=1;g==N?d=new spine.ScaleTimeline(I):g==V?d=new spine.ShearTimeline(I):(d=new spine.TranslateTimeline(I),l=r),d.boneIndex=f;for(let S=0;S<I;S++)d.setFrame(S,e.readFloat(),e.readFloat()*l,e.readFloat()*l),S<I-1&&this.readCurve(e,S,d);s.push(d),n=Math.max(n,d.frames[(I-1)*spine.TranslateTimeline.ENTRIES]);break}default:throw new Error("unknown bone type: "+g)}}}for(let c=0,h=e.readInt(!0);c<h;c++){const f=e.readInt(!0),b=e.readInt(!0),w=new spine.IkConstraintTimeline(b);w.ikConstraintIndex=f;for(let g=0;g<b;g++){const I=e.readFloat(),d=e.readFloat(),l=e.readByte();w.setFrame(g,I,d,0,l,!1,!1),g<b-1&&this.readCurve(e,g,w)}s.push(w),n=Math.max(n,w.frames[(b-1)*spine.IkConstraintTimeline.ENTRIES])}for(let c=0,h=e.readInt(!0);c<h;c++){const f=e.readInt(!0),b=e.readInt(!0),w=new spine.TransformConstraintTimeline(b);w.transformConstraintIndex=f;for(let g=0;g<b;g++){const I=e.readFloat(),d=e.readFloat(),l=e.readFloat(),S=e.readFloat(),x=e.readFloat();w.setFrame(g,I,d,l,S,x),g<b-1&&this.readCurve(e,g,w)}s.push(w),n=Math.max(n,w.frames[(b-1)*spine.PathConstraintPositionTimeline.ENTRIES])}for(let c=0,h=e.readInt(!0);c<h;c++){const f=e.readInt(!0),b=t.pathConstraints[f];for(let w=0,g=e.readInt(!0);w<g;w++){const I=e.readByte(),d=e.readInt(!0);switch(I){case re:case O:{let l,S=1;I==O?(l=new spine.PathConstraintSpacingTimeline(d),(b.spacingMode==spine.SpacingMode.Length||b.spacingMode==spine.SpacingMode.Fixed)&&(S=r)):(l=new spine.PathConstraintPositionTimeline(d),b.positionMode==spine.PositionMode.Fixed&&(S=r)),l.pathConstraintIndex=f;for(let x=0;x<d;x++)l.setFrame(x,e.readFloat(),e.readFloat()*S),x<d-1&&this.readCurve(e,x,l);s.push(l),n=Math.max(n,l.frames[(d-1)*spine.PathConstraintPositionTimeline.ENTRIES]);break}case ne:{const l=new spine.PathConstraintMixTimeline(d);l.pathConstraintIndex=f;for(let S=0;S<d;S++){const x=e.readFloat(),M=e.readFloat(),y=e.readFloat();l.setFrame(S,x,M,y),S<d-1&&this.readCurve(e,S,l)}s.push(l),n=Math.max(n,l.frames[(d-1)*spine.PathConstraintMixTimeline.ENTRIES]);break}}}}for(let c=0,h=e.readInt(!0);c<h;c++){const f=t.skins[e.readInt(!0)];for(let b=0,w=e.readInt(!0);b<w;b++){const g=e.readInt(!0);for(let I=0,d=e.readInt(!0);I<d;I++){const l=e.readString();if(!l)throw new Error("attachmentName must not be null.");const x=f.getAttachment(g,l),M=x.bones!=null,y=x.vertices,p=M?y.length/3*2:y.length,B=e.readInt(!0),k=new spine.DeformTimeline(B);k.slotIndex=g,k.attachment=x;for(let E=0;E<B;E++){const Y=e.readFloat();let v,P=e.readInt(!0);if(P==0)v=M?spine.Utils.newFloatArray(p):y;else{v=spine.Utils.newFloatArray(p);const R=e.readInt(!0);if(P+=R,r==1)for(let T=R;T<P;T++)v[T]=e.readFloat();else for(let T=R;T<P;T++)v[T]=e.readFloat()*r;if(!M)for(let T=0,z=v.length;T<z;T++)v[T]+=y[T]}k.setFrame(E,Y,v),E<B-1&&this.readCurve(e,E,k)}s.push(k),n=Math.max(n,k.frames[B-1])}}}const a=e.readInt(!0);if(a>0){const c=new spine.DrawOrderTimeline(a),h=t.slots.length;for(let f=0;f<a;f++){const b=e.readFloat(),w=e.readInt(!0),g=spine.Utils.newArray(h,0);for(let S=h-1;S>=0;S--)g[S]=-1;const I=spine.Utils.newArray(h-w,0);let d=0,l=0;for(let S=0;S<w;S++){const x=e.readInt(!0);for(;d!=x;)I[l++]=d++;g[d+e.readInt(!0)]=d++}for(;d<h;)I[l++]=d++;for(let S=h-1;S>=0;S--)g[S]==-1&&(g[S]=I[--l]);c.setFrame(f,b,g)}s.push(c),n=Math.max(n,c.frames[a-1])}const u=e.readInt(!0);if(u>0){const c=new spine.EventTimeline(u);for(let h=0;h<u;h++){const f=e.readFloat(),b=t.events[e.readInt(!0)],w=new spine.Event(f,b);w.intValue=e.readInt(!1),w.floatValue=e.readFloat(),w.stringValue=e.readBoolean()?e.readString():b.stringValue,c.setFrame(h,w)}s.push(c),n=Math.max(n,c.frames[u-1])}return new spine.Animation(o,s,n)}readCurve(e,t,r){const o=e.readByte();switch(o){case ae:break;case oe:r.setStepped(t);break;case se:r.setCurve(t,e.readFloat(),e.readFloat(),e.readFloat(),e.readFloat());break;default:throw new Error("unknown curve type: "+o)}}}const Z=0,J=1,N=2,V=3,Q=0,ee=1,te=2,re=0,O=1,ne=2,ae=0,oe=1,se=2;class ie{constructor(e,t){F(this,"context");F(this,"gl");F(this,"lastFrameTime");F(this,"mvp");F(this,"shader");F(this,"batcher");F(this,"skeletonRenderer");F(this,"debug");F(this,"debugRenderer");F(this,"debugShader");F(this,"debugShapes");F(this,"model");F(this,"waitForAssets",()=>{if(this.assetManager.isLoadingComplete()){this.assetManager.hasErrors()?console.error(this.assetManager.getErrors()):this.tick();return}requestAnimationFrame(this.waitForAssets)});F(this,"tick",()=>{const e=Date.now()/1e3,t=e-this.lastFrameTime;if(this.lastFrameTime=e,this.model){this.resize();const{skel:r,animationState:o}=this.model;o.update(t),o.apply(r),r.updateWorldTransform(),this.render(),this.renderDebug()}requestAnimationFrame(this.tick.bind(this))});F(this,"resize",()=>{if(!this.model)return;const e=this.canvas,t=e.clientWidth,r=e.clientHeight,o=this.model.bounds;(e.width!==t||e.height!==r)&&(e.width=t,e.height=r);const s=o.offset.x+o.size.x/2,n=o.offset.y+o.size.y/2,i=o.size.x/e.width,m=o.size.y/e.height;let a=Math.max(i,m);a<1&&(a=1);const u=e.width*a,c=e.height*a;this.mvp.ortho2d(s-u/2,n-c/2,u,c),this.gl.viewport(0,0,e.width,e.height)});F(this,"render",()=>{this.model&&(this.gl.clearColor(.3,.3,.3,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.shader.bind(),this.shader.setUniformi(spine.webgl.Shader.SAMPLER,0),this.shader.setUniform4x4f(spine.webgl.Shader.MVP_MATRIX,this.mvp.values),this.batcher.begin(this.shader),this.skeletonRenderer.premultipliedAlpha=!0,this.skeletonRenderer.draw(this.batcher,this.model.skel),this.batcher.end(),this.shader.unbind())});F(this,"renderDebug",()=>{this.model&&this.debug&&(this.debugShader.bind(),this.debugShader.setUniform4x4f(spine.webgl.Shader.MVP_MATRIX,this.mvp.values),this.debugShapes.begin(this.debugShader),this.debugRenderer.premultipliedAlpha=!0,this.debugRenderer.draw(this.debugShapes,this.model.skel),this.debugShapes.end(),this.debugShader.unbind())});this.canvas=e,this.assetManager=t,this.context=new spine.webgl.ManagedWebGLRenderingContext(e),this.gl=this.context.gl,this.lastFrameTime=Date.now()/1e3,this.mvp=new spine.webgl.Matrix4,this.shader=spine.webgl.Shader.newTwoColoredTextured(this.context),this.batcher=new spine.webgl.PolygonBatcher(this.context),this.skeletonRenderer=new spine.webgl.SkeletonRenderer(this.context),this.debug=!1;const r=new spine.webgl.SkeletonDebugRenderer(this.gl);r.drawBones=!0,r.drawRegionAttachments=!0,r.drawBoundingBoxes=!1,r.drawMeshHull=!1,r.drawMeshTriangles=!1,r.drawPaths=!1,r.drawSkeletonXY=!1,r.drawClipping=!1,this.debugRenderer=r,this.debugShader=spine.webgl.Shader.newColored(this.context),this.debugShapes=new spine.webgl.ShapeRenderer(this.context),requestAnimationFrame(this.waitForAssets.bind(this))}}let A;const de=new URLSearchParams(window.location.search),D=de.get("path"),L=D||"costume/1010001/model_right",U=`${L}.atlas`,_=ce(L),le=L.endsWith("model_left");function ce(C){const e=C.split("/");if(e[0]==="costume"){const t=e[1].slice(0,3),r=e[2];return`character/${t}/${r}.skel`}else return`${C}.skel`}function he(){const C=document.getElementById("canvas"),e=C.getContext("webgl",{alpha:!1}),t="https://cdn.karth.top/api/assets/jp/res/spine/",r=W(new spine.webgl.AssetManager(e,t));A=new ie(C,r),r.loadTextureAtlas(U),r.loadBinary(_),requestAnimationFrame(X)}function X(){A.assetManager.isLoadingComplete()?(A.model=me(),ge()):requestAnimationFrame(X)}function me(){const C=A.assetManager.get(U),e=A.assetManager.get(_),t=new spine.AtlasAttachmentLoader(C),o=new j(t).readSkeletonData(e),s=new spine.Skeleton(o);s.scaleX=le?-1:1;const n=fe(s),i=new spine.AnimationStateData(s.data),m=new spine.AnimationState(i),a=s.data.animations[0].name;return m.setAnimation(0,a,!1),{skel:s,animationState:m,bounds:n}}function fe(C){C.setToSetupPose(),C.updateWorldTransform();const e=new spine.Vector2,t=new spine.Vector2;return C.getBounds(e,t,[]),{offset:e,size:t}}function ge(){const C=function(){var m;const t=$("#animationList");t.empty();const r=A.model.skel,s=((m=A.model.animationState.tracks[0])==null?void 0:m.animation.name)??"",n=r.data.animations;for(let a=0,u=n.length;a<u;a++){const c=n[a].name,h=$("<option></option>");h.attr("value",c).text(c),c===s&&h.attr("selected","selected"),t.append(h)}const i=()=>{const a=A.model.skel,u=A.model.animationState,c=$("#animationList option:selected").text(),h=$("#loop").is(":checked");a.setToSetupPose(),u.setAnimation(0,c,h)};t.on("change",i),$("#loop").on("change",i),i()},e=$("#debug");e.on("change",()=>{A.debug=e.is(":checked")}),C()}he();
